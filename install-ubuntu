#!/bin/bash
phitv_version="1.0.0"
phpmyadmin_version="5.0.3"
script_url="https://script.tranvanphi.info/"
low_ram='262144' # 256MB
apt-get -y install gawk bc wget lsof
clear
printf "=========================================================================\n"
printf "Check VPS info... \n"
printf "=========================================================================\n"
cpu_name=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cpu_cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
cpu_freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
server_ram_total=$(awk '/MemTotal/ {print $2}' /proc/meminfo)
server_ram_mb=`echo "scale=0;$server_ram_total/1024" | bc`
server_hdd=$( df -h | awk 'NR==2 {print $2}' )
server_swap_total=$(awk '/SwapTotal/ {print $2}' /proc/meminfo)
server_swap_mb=`echo "scale=0;$server_swap_total/1024" | bc`
server_ip=$(curl -s https://ident.me/)
printf "=========================================================================\n"
printf "VPS info below \n"
printf "=========================================================================\n"
echo "CPU: $cpu_name"
echo "CPU core: $cpu_cores"
echo "Core Speed: $cpu_freq MHz"
echo "RAM: $server_ram_mb MB"
echo "Swap: $server_swap_mb MB"
echo "Disk: $server_hdd GB"
echo "IP: $server_ip"
printf "=========================================================================\n"
printf "=========================================================================\n"
if [ $server_ram_total -lt $low_ram ]; then
	echo -e "Error: RAM is very low to install Script \n (Min 256MB) \n"
	echo "Cancel..."
	exit
fi
sleep 3
clear
printf "=========================================================================\n"
printf "Begin... \n"
printf "=========================================================================\n"
printf "php version 7.4\n"
php_version="7.4"; # Default PHP 7.4
printf "\nSelect port admin [ENTER]: (2000 - 9999)(not include 2222): " 
read admin_port
if [ "$admin_port" == "" ] || [ $admin_port == "2222" ] || [ $admin_port -lt 2000 ] || [ $admin_port -gt 9999 ] || [ $(lsof -i -P | grep ":$admin_port " | wc -l) != "0" ]; then
	admin_port=$(date +'%Y')
	echo "Port admin is incorrect. $admin_port have selected"
	echo
fi
printf "=========================================================================\n"
printf "Finish Begin... \n"
printf "=========================================================================\n"
rm -f /etc/localtime
ln -sf /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime
if [ -s /etc/selinux/config ]; then
sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config
fi
setenforce 0
apt-get -y install software-properties-common
apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'
add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://nyc2.mirrors.digitalocean.com/mariadb/repo/10.4/ubuntu focal main'
#
systemctl stop saslauthd.service
systemctl disable saslauthd.service
apt-get -y remove mysql* php* httpd* sendmail* postfix* rsyslog*
apt-get clean all
apt-get -y update
#remove apache2
systemctl stop apache2
systemctl disable apache2
apt -y remove apache2
apt -y autoremove
clear
printf "=========================================================================\n"
printf "Start install your vps... \n"
printf "=========================================================================\n"
sleep 3
# Install Nginx, PHP-FPM and modules
# Enable Remi Repo
apt-get -y update
apt-get -y install software-properties-common
add-apt-repository -y ppa:ondrej/php
apt-get -y update
apt -y install nginx php php-cli php8.0-fpm php-json php-common php-mysql php-zip php-gd php-mbstring php-curl php-xml php-pear php-bcmath php-xmlrpc php-imagick php-mcrypt php-soap
# Install MariaDB
apt -y install mariadb-server
# Install Others
apt -y install syslog-ng syslog-ng-core fail2ban unzip zip nano openssl ntpdate
ntpdate asia.pool.ntp.org
hwclock --systohc
clear
printf "=========================================================================\n"
printf "Install finish, Start config... \n"
printf "=========================================================================\n"
sleep 3
# Autostart
#disable mysqld service
systemctl disable mysql.service 
rm -f /etc/systemd/system/mysqld.service
systemctl enable nginx.service
systemctl enable php8.0-fpm.service
systemctl enable mariadb.service 
systemctl enable fail2ban.service
mkdir -p /home/default/html
mkdir -p /var/lib/php/wsdlcache
mkdir /home/default/logs
chmod 777 /home/default/logs
mkdir -p /var/log/nginx
chown -R www-data:www-data /var/log/nginx
chown -R www-data:www-data /var/lib/php/sessions
systemctl start nginx.service
systemctl start php8.0-fpm.service
systemctl start mariadb.service
# PHP #
phplowmem='2097152'
check_phplowmem=$(expr $server_ram_total \< $phplowmem)
max_children=`echo "scale=0;$server_ram_mb*0.4/30" | bc`
if [ "$check_phplowmem" == "1" ]; then
	lessphpmem=y
fi
if [[ "$lessphpmem" = [yY] ]]; then  
	wget -q $script_url/ubuntu-cf/php-fpm/php-fpm-min.conf -O /etc/php/8.0/fpm/php-fpm.conf
	wget -q $script_url/ubuntu-cf/php-fpm/www-min.conf -O /etc/php/8.0/fpm/pool.d/www.conf
else
	wget -q $script_url/ubuntu-cf/php-fpm/php-fpm.conf -O /etc/php/8.0/fpm/php-fpm.conf
	wget -q $script_url/ubuntu-cf/php-fpm/www.conf -O /etc/php/8.0/fpm/pool.d/www.conf
fi 

sed -i "s/max_children_here/$max_children/g" /etc/php/8.0/fpm/pool.d/www.conf

# dynamic PHP memory_limit calculation
if [[ "$server_ram_total" -le '262144' ]]; then
	php_memorylimit='48M'
	php_uploadlimit='48M'
	php_realpathlimit='256k'
	php_realpathttl='14400'
elif [[ "$server_ram_total" -gt '262144' && "$server_ram_total" -le '393216' ]]; then
	php_memorylimit='96M'
	php_uploadlimit='96M'
	php_realpathlimit='320k'
	php_realpathttl='21600'
elif [[ "$server_ram_total" -gt '393216' && "$server_ram_total" -le '524288' ]]; then
	php_memorylimit='128M'
	php_uploadlimit='128M'
	php_realpathlimit='384k'
	php_realpathttl='28800'
elif [[ "$server_ram_total" -gt '524288' && "$server_ram_total" -le '1049576' ]]; then
	php_memorylimit='160M'
	php_uploadlimit='160M'
	php_realpathlimit='384k'
	php_realpathttl='28800'
elif [[ "$server_ram_total" -gt '1049576' && "$server_ram_total" -le '2097152' ]]; then
	php_memorylimit='256M'
	php_uploadlimit='256M'
	php_realpathlimit='384k'
	php_realpathttl='28800'
elif [[ "$server_ram_total" -gt '2097152' && "$server_ram_total" -le '3145728' ]]; then
	php_memorylimit='320M'
	php_uploadlimit='320M'
	php_realpathlimit='512k'
	php_realpathttl='43200'
elif [[ "$server_ram_total" -gt '3145728' && "$server_ram_total" -le '4194304' ]]; then
	php_memorylimit='512M'
	php_uploadlimit='512M'
	php_realpathlimit='512k'
	php_realpathttl='43200'
elif [[ "$server_ram_total" -gt '4194304' ]]; then
	php_memorylimit='800M'
	php_uploadlimit='800M'
	php_realpathlimit='640k'
	php_realpathttl='86400'
fi

cat > "/etc/php/8.0/fpm/conf.d/00-custom.ini" <<END
date.timezone = Asia/Ho_Chi_Minh
max_execution_time = 180
short_open_tag = On
realpath_cache_size = $php_realpathlimit
realpath_cache_ttl = $php_realpathttl
memory_limit = $php_memorylimit
upload_max_filesize = $php_uploadlimit
post_max_size = $php_uploadlimit
expose_php = Off
mail.add_x_header = Off
max_input_nesting_level = 128
max_input_vars = 2000
mysqlnd.net_cmd_buffer_size = 16384
always_populate_raw_post_data=-1
disable_functions=shell_exec
END

systemctl restart php8.0-fpm.service

# Nginx #
cat > "/etc/nginx/nginx.conf" <<END

user www-data;
worker_processes auto;
worker_rlimit_nofile 260000;

error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;

events {
	worker_connections  2048;
	accept_mutex off;
	accept_mutex_delay 200ms;
	use epoll;
}

http {
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;

	set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/12;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2a06:98c0::/29;
    set_real_ip_from 2c0f:f248::/32;

	real_ip_header CF-Connecting-IP;

	log_format  main  '\$remote_addr - \$remote_user [\$time_local] "\$request" '
	              '\$status \$body_bytes_sent "\$http_referer" '
	              '"\$http_user_agent" "\$http_x_forwarded_for"';

	#Disable IFRAME
	add_header X-Frame-Options SAMEORIGIN;
	
	#Prevent Cross-site scripting (XSS) attacks
	add_header X-XSS-Protection "1; mode=block";
	
	#Prevent MIME-sniffing
	add_header X-Content-Type-Options nosniff;
	
	access_log  off;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay off;
	types_hash_max_size 2048;
	server_tokens off;
	server_names_hash_bucket_size 128;
	client_max_body_size 0;
	client_body_buffer_size 256k;
	client_body_in_file_only off;
	client_body_timeout 60s;
	client_header_buffer_size 256k;
	client_header_timeout  20s;
	large_client_header_buffers 8 256k;
	keepalive_timeout 10;
	keepalive_disable msie6;
	reset_timedout_connection on;
	send_timeout 60s;
	
	gzip on;
	gzip_static on;
	gzip_disable "msie6";
	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/plain text/css application/json text/javascript application/javascript text/xml application/xml application/xml+rss;

	include /etc/nginx/conf.d/*.conf;
}
END

cat > "/usr/share/nginx/html/403.html" <<END
<html>
<head><title>403 Forbidden</title></head>
<body bgcolor="white">
<center><h1>403 Forbidden</h1></center>
<hr><center>phitv-nginx</center>
</body>
</html>
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
END

cat > "/usr/share/nginx/html/404.html" <<END
<html>
<head><title>404 Not Found</title></head>
<body bgcolor="white">
<center><h1>404 Not Found</h1></center>
<hr><center>phitv-nginx</center>
</body>
</html>
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
<!-- a padding to disable MSIE and Chrome friendly error page -->
END

rm -rf /etc/nginx/conf.d/*
cat > "/etc/nginx/conf.d/default.conf" <<END
server {
    listen   80 default_server;
    return   444;
}
server {
	listen $admin_port;
	
 	access_log off;
	log_not_found off;
 	error_log /home/default/logs/nginx_error.log;
	
	root /home/default/html;
	index index.php index.html index.htm;
	
	auth_basic "Restricted";
	auth_basic_user_file /home/default/html/phitv/.htpasswd;
 
	location / {
	autoindex on;
	try_files \$uri \$uri/ /index.php;
	}
	
	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		include /etc/nginx/fastcgi_params;
		fastcgi_pass 127.0.0.1:9000;
		fastcgi_index index.php;
		fastcgi_connect_timeout 1000;
		fastcgi_send_timeout 1000;
		fastcgi_read_timeout 1000;
		fastcgi_buffer_size 256k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;
		fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
	}
	
	location ~ /\. {
		deny all;
	}
}
END

cat >> "/etc/security/limits.conf" <<END
* soft nofile 262144
* hard nofile 262144
nginx soft nofile 262144
nginx hard nofile 262144
nobody soft nofile 262144
nobody hard nofile 262144
root soft nofile 262144
root hard nofile 262144
END

ulimit -n 262144

systemctl restart nginx.service

# MariaDB #

rm -rf /etc/mysql/conf.d/*
rm -rf /etc/mysql/mariadb.conf.d/*

cp /etc/mysql/mariadb.cnf /etc/mysql/mariadb.cnf-original

if [[ "$(expr $server_ram_total \<= 2099000)" = "1" ]]; then
	wget -q $script_url/ubuntu-cf/mysql/my-mdb10-min.cnf -O /etc/mysql/mariadb.cnf
fi

if [[ "$(expr $server_ram_total \> 2100001)" = "1" && "$(expr $server_ram_total \<= 4190000)" = "1" ]]; then
	wget -q $script_url/ubuntu-cf/mysql/my-mdb10.cnf -O /etc/mysql/mariadb.cnf
fi

if [[ "$(expr $server_ram_total \>= 4190001)" = "1" && "$(expr $server_ram_total \<= 8199999)" = "1" ]]; then
	wget -q $script_url/ubuntu-cf/mysql/my-mdb10-4gb.cnf -O /etc/mysql/mariadb.cnf
fi

if [[ "$(expr $server_ram_total \>= 8200000)" = "1" && "$(expr $server_ram_total \<= 15999999)" = "1" ]]; then
	wget -q $script_url/ubuntu-cf/mysql/my-mdb10-8gb.cnf -O /etc/mysql/mariadb.cnf
fi

if [[ "$(expr $server_ram_total \>= 16000000)" = "1" && "$(expr $server_ram_total \<= 31999999)" = "1" ]]; then
	wget -q $script_url/ubuntu-cf/mysql/my-mdb10-16gb.cnf -O /etc/mysql/mariadb.cnf
fi

if [[ "$(expr $server_ram_total \>= 32000000)" = "1" ]]; then
	wget -q $script_url/ubuntu-cf/mysql/my-mdb10-32gb.cnf -O /etc/mysql/mariadb.cnf
fi

rm -f /var/lib/mysql/ib_logfile0
rm -f /var/lib/mysql/ib_logfile1
rm -f /var/lib/mysql/ibdata1

clear
printf "=========================================================================\n"
printf "Config for MariaDB ... \n"
printf "=========================================================================\n"

# Random password for admin account
admin_password=`date |md5sum |cut -c '14-30'`

read -p "Enter root passwrd: "  root_password
if [ "$root_password" = "" ]; then
	# Random password for MySQL root account
	root_password=`date |md5sum |cut -c '14-30'`
	echo "You not enter root password, $admin_password will be set to root password"
fi
sleep 1

'/usr/bin/mysqladmin' -u root password "$root_password"
mysql -u root -p"$root_password" -e "DELETE FROM mysql.user WHERE User=''"
mysql -u root -p"$root_password" -e "FLUSH PRIVILEGES"

cat > "/root/.my.cnf" <<END
[client]
user=root
password=$root_password
END
chmod 600 /root/.my.cnf

# Fix MariaDB 10
systemctl stop mariadb.service

wget -q $script_url/config/mysql/mariadb10_3tables.sql

rm -rf /var/lib/mysql/mysql/gtid_slave_pos.ibd
rm -rf /var/lib/mysql/mysql/innodb_table_stats.ibd
rm -rf /var/lib/mysql/mysql/innodb_index_stats.ibd

systemctl start mariadb.service

mysql -e "ALTER TABLE mysql.gtid_slave_pos DISCARD TABLESPACE;" 2> /dev/null
mysql -e "ALTER TABLE mysql.innodb_table_stats DISCARD TABLESPACE;" 2> /dev/null
mysql -e "ALTER TABLE mysql.innodb_index_stats DISCARD TABLESPACE;" 2> /dev/null

mysql mysql < mariadb10_3tables.sql

systemctl restart mariadb.service
mysql_upgrade --force mysql
rm -f mariadb10_3tables.sql

clear
printf "=========================================================================\n"
printf "Config for MariaDB Finish... \n"
printf "=========================================================================\n"

# Script Admin
cd /home/default/html/
wget -q $script_url/package/administrator.zip
unzip -q administrator.zip && rm -f administrator.zip
mv -f administrator/* .
rm -rf administrator
printf "admin:$(openssl passwd -apr1 $admin_password)\n" > /home/default/html/phitv/.htpasswd
sed -i "s/rootpassword/$root_password/g" /home/default/html/phitv/SQLManager.php


# Server Info
mkdir /home/default/html/serverinfo/
cd /home/default/html/serverinfo/
wget -q $script_url/package/serverinfo.zip
unzip -q serverinfo.zip && rm -f serverinfo.zip


# phpMyAdmin
mkdir /home/default/html/phpmyadmin/
cd /home/default/html/phpmyadmin/
wget --no-check-certificate -q https://files.phpmyadmin.net/phpMyAdmin/$phpmyadmin_version/phpMyAdmin-$phpmyadmin_version-english.zip
unzip -q phpMyAdmin-$phpmyadmin_version-english.zip
mv -f phpMyAdmin-$phpmyadmin_version-english/* .
rm -rf phpMyAdmin-$phpmyadmin_version-english*

# eXtplorer File Manager
mkdir /home/default/html/eXtplorer/
cd /home/default/html/eXtplorer/
wget --no-check-certificate -q $script_url/component/eXtplorer.zip # Note ID 74
unzip -q eXtplorer.zip && rm -f eXtplorer.zip
cat > "/home/default/html/eXtplorer/config/.htusers.php" <<END
<?php
        if( !defined( '_JEXEC' ) && !defined( '_VALID_MOS' ) ) die( 'Restricted access' );
        \$GLOBALS["users"]=array(
        array('admin','$(echo -n "$admin_password" | md5sum | awk '{print $1}')','/home','http://localhost','1','','7',1),
);
?>
END

# Log Rotation
cat > "/etc/logrotate.d/nginx" <<END
/home/*/logs/access.log /home/*/logs/error.log /home/*/logs/nginx_error.log {
	create 640 nginx nginx
        daily
	dateext
        missingok
        rotate 5
        maxage 7
        compress
	size=100M
        notifempty
        sharedscripts
        postrotate
                [ -f /var/run/nginx.pid ] && kill -USR1 \`cat /var/run/nginx.pid\`
        endscript
	su nginx nginx
}
END
cat > "/etc/logrotate.d/php-fpm" <<END
/home/*/logs/php-fpm*.log {
        daily
	dateext
        compress
        maxage 7
        missingok
        notifempty
        sharedscripts
        size=100M
        postrotate
            /bin/kill -SIGUSR1 \`cat /var/run/php-fpm/php-fpm.pid 2>/dev/null\` 2>/dev/null || true
        endscript
	su nginx nginx
}
END
cat > "/etc/logrotate.d/mysql" <<END
/home/*/logs/mysql*.log {
        create 640 mysql mysql
        notifempty
        daily
        rotate 3
        maxage 7
        missingok
        compress
        postrotate
        # just if mysqld is really running
        if test -x /usr/bin/mysqladmin && \
           /usr/bin/mysqladmin ping &>/dev/null
        then
           /usr/bin/mysqladmin flush-logs
        fi
        endscript
	su mysql mysql
}
END

# Change port SSH
sed -i 's/#Port 22/Port 2222/g' /etc/ssh/sshd_config
sed -i 's/ports=22/ports=2222/g' /etc/ufw/applications.d/openssh-server

cat > "/etc/fail2ban/jail.local" <<END

[sshd]
enabled  = true
filter   = sshd
action   = ufw[application="OpenSSH", blocktype=reject]
logpath  = /var/log/secure
maxretry = 3
bantime = 3600

END

systemctl start fail2ban.service

# Open port
#if [ -f /etc/sysconfig/iptables ]; then
#	iptables -I INPUT -p tcp --dport 80 -j ACCEPT
#	iptables -I INPUT -p tcp --dport 25 -j ACCEPT
#	iptables -I INPUT -p tcp --dport 443 -j ACCEPT
#	iptables -I INPUT -p tcp --dport 465 -j ACCEPT
#	iptables -I INPUT -p tcp --dport 587 -j ACCEPT
#	iptables -I INPUT -p tcp --dport $admin_port -j ACCEPT
#	iptables -I INPUT -p tcp --dport 2222 -j ACCEPT
#	service iptables save
#fi

ufw allow 80
ufw allow 25
ufw allow 443
ufw allow 465
ufw allow 587
ufw allow $admin_port
ufw allow 2222
ufw allow 22
ufw enable
chown -R www-data:www-data /var/lib/php
chown www-data:www-data /home/default
chown -R www-data:www-data /home/*/html

rm -f /root/install
echo -n "cd /home" >> /root/.bashrc

mkdir -p /etc/phitv/

cat > "/etc/phitv/scripts.conf" <<END
phitv_version="$phitv_version"
server_name="default"
server_ip="$server_ip"
admin_port="$admin_port"
script_url="$script_url"
mariadb_root_password="$root_password"
END
chmod 600 /etc/phitv/scripts.conf

clear
printf "=========================================================================\n"
printf "Finish config, add menu scripts... \n"
printf "=========================================================================\n"

wget -q $script_url/phitv-ubuntu -O /bin/phitv && chmod +x /bin/phitv
mkdir /etc/phitv/menu/
cd /etc/phitv/menu/
wget -q $script_url/component/menu-ubuntu.zip
unzip -q menu-ubuntu.zip && rm -f menu-ubuntu.zip
chmod +x /etc/phitv/menu/*

clear
cat > "/root/phitv-script.txt" <<END
=========================================================================
                           MANAGE VPS INFORMATION                        
=========================================================================
Menu Script: phitv

Main Domain: http://$server_ip/

Script Admin:	http://$server_ip:$admin_port/
File Manager:		hoac http://$server_ip:$admin_port/eXtplorer/
phpMyAdmin:		http://$server_ip:$admin_port/phpmyadmin/
Server Info:		http://$server_ip:$admin_port/serverinfo/

Account info for all tool
Username: admin
Password: $admin_password
END

chmod 600 /root/phitv-script.txt

printf "=========================================================================\n"
printf "Script Admin: http://$server_ip:$admin_port/\n\n"
printf "File Manager: http://$server_ip:$admin_port/eXtplorer/\n\n"
printf "phpMyAdmin: http://$server_ip:$admin_port/phpmyadmin/\n\n"
printf "Server Info: http://$server_ip:$admin_port/serverinfo/\n\n"
printf "=========================================================================\n"
printf "Account info for all tool:\n"
printf " Username: admin\n"
printf " Password: $admin_password\n"
printf "=========================================================================\n"
printf "Info save to: /root/phitv-script.txt \n"
printf "=========================================================================\n"
printf "***Note: Port SSH Change from 22 to 2222 \n"
printf "=========================================================================\n"
printf "Use \"phitv\" to connect SSH.\n"
printf "=========================================================================\n"
printf "Server will be reboot adter 3s.... \n\n"
sleep 3
reboot
exit
